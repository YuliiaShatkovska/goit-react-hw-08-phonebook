{"version":3,"file":"static/js/111.59e5eead.chunk.js","mappings":"sLAEaA,E,QAAYC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6S,sJCWtBC,EAAY,WACvB,IAAMC,GAAeC,EAAAA,EAAAA,MACfC,GAAkBD,EAAAA,EAAAA,MAElBE,GAAWC,EAAAA,EAAAA,MACjBC,GAA0BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAgCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,QAAQC,IAAIP,EAAOI,GAEnB,IAAMI,EAAe,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MACtC,OAAQD,GACN,IAAK,QACH,OAAOX,EAASY,GAClB,IAAK,WACH,OAAOR,EAAYQ,GACrB,QACE,OAEN,EAWA,OACEC,EAAAA,EAAAA,KAAC5B,EAAAA,EAAS,CAAA6B,UACRC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,aAAa,MAAMC,SAXX,SAAAC,GACnBA,EAAEC,iBACF3B,GAAS4B,EAAAA,EAAAA,IAAU,CAAEtB,MAAAA,EAAOI,SAAAA,KACfgB,EAAEG,cACVC,QACLvB,EAAS,IACTI,EAAY,GACd,EAIuDU,SAAA,EACjDC,EAAAA,EAAAA,MAACS,EAAAA,GAAY,CAAAV,SAAA,EACXD,EAAAA,EAAAA,KAACY,EAAAA,GAAS,CAACC,QAASpC,EAAawB,SAAC,WAClCD,EAAAA,EAAAA,KAACc,EAAAA,GAAS,CACRC,KAAK,QACLjB,KAAK,QACLkB,GAAIvC,EACJwC,SAAUvB,QAGdQ,EAAAA,EAAAA,MAACS,EAAAA,GAAY,CAAAV,SAAA,EACXD,EAAAA,EAAAA,KAACY,EAAAA,GAAS,CAACC,QAASlC,EAAgBsB,SAAC,cACrCD,EAAAA,EAAAA,KAACc,EAAAA,GAAS,CACRC,KAAK,WACLjB,KAAK,WACLkB,GAAIrC,EACJsC,SAAUvB,QAGdM,EAAAA,EAAAA,KAACkB,EAAAA,GAAO,CAACH,KAAK,SAAQd,SAAC,eAI/B,ECjEe,SAASkB,IACtB,OACEnB,EAAAA,EAAAA,KAAAoB,EAAAA,SAAA,CAAAnB,UACED,EAAAA,EAAAA,KAACxB,EAAS,KAGhB,C","sources":["components/App/App.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  max-width: 288px;\n  padding: 16px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    max-width: 727px;\n    padding: 20px;\n  }\n\n  /* @media screen and (min-width: 1280px) {\n    max-width: 1230px;\n    padding: 25px;\n  } */\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { loginUser } from '../../redux/auth/operations';\nimport { Container } from 'components/App/App.styled';\nimport {\n  FormBox,\n  FormBtn,\n  FormInput,\n  FormInputBox,\n  FormLabel,\n} from 'components/AuthNav/AuthNav.styled';\n\nexport const LoginForm = () => {\n  const loginEmailId = nanoid();\n  const loginPasswordId = nanoid();\n\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  console.log(email, password);\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(loginUser({ email, password }));\n    const form = e.currentTarget;\n    form.reset();\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container>\n      <FormBox autoComplete=\"off\" onSubmit={handleSubmit}>\n        <FormInputBox>\n          <FormLabel htmlFor={loginEmailId}>Email</FormLabel>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            id={loginEmailId}\n            onChange={handleChange}\n          />\n        </FormInputBox>\n        <FormInputBox>\n          <FormLabel htmlFor={loginPasswordId}>Password</FormLabel>\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            id={loginPasswordId}\n            onChange={handleChange}\n          />\n        </FormInputBox>\n        <FormBtn type=\"submit\">Log In</FormBtn>\n      </FormBox>\n    </Container>\n  );\n};\n","import { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","LoginForm","loginEmailId","nanoid","loginPasswordId","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","console","log","handleChange","_ref","_ref$target","target","name","value","_jsx","children","_jsxs","FormBox","autoComplete","onSubmit","e","preventDefault","loginUser","currentTarget","reset","FormInputBox","FormLabel","htmlFor","FormInput","type","id","onChange","FormBtn","Login","_Fragment"],"sourceRoot":""}