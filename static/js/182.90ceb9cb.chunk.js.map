{"version":3,"file":"static/js/182.90ceb9cb.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/Title/Title.styled.js","components/Title/Title.jsx","redux/filter/selector.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactList.styled.js","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 800px;\n  padding: 30px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import styled from 'styled-components';\n\nexport const TitleStyle = styled.h2`\n  margin-bottom: 10px;\n  color: #7be8ea;\n`;\n","import { TitleStyle } from './Title.styled';\n\nexport const Title = ({ children }) => {\n  return <TitleStyle>{children}</TitleStyle>;\n};\n","export const selectFilter = state => state.filter.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../../redux/filter/selector';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFiltredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const filtred = filter.toLowerCase();\n    const contactList = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtred)\n    );\n\n    return contactList;\n  }\n);\n","import { ErrorMessage, Field, Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const ContactFormContainer = styled(Form)`\n  border: 1px solid #757473;\n  box-shadow: 0px -2px 7px #757473;\n  border-radius: 10px;\n  padding: 15px;\n  max-width: 100%;\n  margin-bottom: 30px;\n`;\n\nexport const InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const ContactInput = styled(Field)`\n  padding: 10px;\n  outline: transparent;\n  background-color: transparent;\n  border: none;\n  border: 1px solid #757473;\n  border-radius: 10px;\n  color: #c0bfbf;\n\n  &:hover {\n    border-color: #7be8ea;\n  }\n`;\n\nexport const ContactErrorMessage = styled(ErrorMessage)`\n  color: #a47e81;\n  font-size: 14px;\n  margin-bottom: 5px;\n`;\n\nexport const ContactFormBtn = styled.button`\n  padding: 10px;\n  border: none;\n  border-radius: 10px;\n  border: 1px solid #757473;\n  background-color: transparent;\n  margin-top: 10px;\n  color: inherit;\n\n  &:hover {\n    border-color: #7be8ea;\n  }\n`;\n","// import { Component } from 'react';\nimport { nanoid } from 'nanoid';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { Title } from '../Title/Title';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport {\n  ContactErrorMessage,\n  ContactFormBtn,\n  ContactFormContainer,\n  ContactInput,\n  InputContainer,\n} from './ContactForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(),\n  number: yup.number().required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactForm = () => {\n  const formNameId = nanoid();\n  const numberId = nanoid();\n\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const onHandleSubmit = ({ name, number }, { resetForm }) => {\n    const sameName = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (sameName) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    Notiflix.Notify.info(`\n    The contact ${name} has been successfully added!`);\n\n    resetForm();\n  };\n\n  return (\n    <>\n      <Title>Phonebook</Title>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={onHandleSubmit}\n        validationSchema={schema}\n      >\n        <ContactFormContainer>\n          <InputContainer>\n            <label htmlFor={formNameId}>Name</label>\n            <ContactInput\n              id={formNameId}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            />\n\n            <ContactErrorMessage name=\"name\" component=\"div\" />\n          </InputContainer>\n\n          <InputContainer>\n            <label htmlFor={numberId}>Number</label>\n            <ContactInput\n              id={numberId}\n              type=\"tel\"\n              name=\"number\"\n              placeholder=\"+380\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            />\n            <ContactErrorMessage name=\"number\" component=\"p\" />\n          </InputContainer>\n          <ContactFormBtn type=\"submit\">Add contact</ContactFormBtn>\n        </ContactFormContainer>\n      </Formik>\n    </>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n  color: #c0bfbf;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactsBtn = styled.button`\n  cursor: pointer;\n  border: none;\n  border: 1px solid #757473;\n  background-color: transparent;\n  padding: 5px 10px;\n  border-radius: 10px;\n  color: inherit;\n\n  &:hover {\n    border-color: #7be8ea;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { selectFiltredContacts } from '../../redux/contacts/selectors';\nimport { deleteContacts } from '../../redux/contacts/operations';\nimport { ContactsBtn, ContactsItem, ContactsList } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const deleteContact = ({ id, name }) => {\n    dispatch(deleteContacts(id));\n    Notiflix.Notify.info(\n      `\n    The contact ${name} has been successfully deleted!`\n    );\n  };\n\n  const contactList = useSelector(selectFiltredContacts);\n\n  return (\n    <ContactsList>\n      {contactList.length > 0 &&\n        contactList.map(el => (\n          <ContactsItem key={el.id}>\n            <div>\n              <b>{el.name}</b>: {el.number}\n            </div>\n\n            <ContactsBtn type=\"button\" onClick={() => deleteContact(el)}>\n              Delete\n            </ContactsBtn>\n          </ContactsItem>\n        ))}\n    </ContactsList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 30px;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 10px;\n  outline: transparent;\n  background-color: transparent;\n  border: none;\n  border: 1px solid #757473;\n  border-radius: 10px;\n  color: #c0bfbf;\n\n  &:hover {\n    border-color: #7be8ea;\n  }\n`;\n","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/filter/filterSlice';\nimport { selectFilter } from '../../redux/filter/selector';\nimport { TitleStyle } from 'components/Title/Title.styled';\nimport { FilterContainer, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const filterId = nanoid();\n\n  const { filter } = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    const { value } = e.currentTarget;\n\n    dispatch(filterContact(value));\n  };\n\n  return (\n    <>\n      <TitleStyle>Contacts</TitleStyle>\n      <FilterContainer>\n        <label htmlFor={filterId}>Find contacts by name</label>\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          id={filterId}\n          value={filter}\n          onChange={onChange}\n        />\n      </FilterContainer>\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <ThreeDots color=\"#7be8ea;\" />\n    </LoaderContainer>\n  );\n};\nexport default Loader;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactsList/ContactsList';\nimport Filter from '../components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from '../redux/contacts/selectors';\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { Container } from 'components/App/App.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      {isLoading && !error ? (\n        <Loader />\n      ) : contacts && contacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <p>No contacts added yet</p>\n      )}\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","TitleStyle","Title","_ref","children","_jsx","selectFilter","state","filter","selectContacts","contacts","selectIsLoading","isLoading","selectError","error","selectFiltredContacts","createSelector","filtred","toLowerCase","contact","name","includes","ContactFormContainer","Form","InputContainer","_templateObject2","ContactInput","Field","_templateObject3","ContactErrorMessage","ErrorMessage","_templateObject4","ContactFormBtn","_templateObject5","schema","yup","shape","required","number","initialValues","formNameId","nanoid","numberId","useSelector","dispatch","useDispatch","_jsxs","_Fragment","Formik","onSubmit","_ref2","resetForm","some","alert","concat","addContact","Notiflix","validationSchema","htmlFor","id","type","pattern","component","placeholder","ContactsList","ContactsItem","ContactsBtn","contactList","length","map","el","onClick","deleteContacts","deleteContact","FilterContainer","FilterInput","filterId","value","onChange","e","currentTarget","filterContact","LoaderContainer","ThreeDots","color","useEffect","fetchContacts","ContactForm","Filter","Loader","ContactList"],"sourceRoot":""}