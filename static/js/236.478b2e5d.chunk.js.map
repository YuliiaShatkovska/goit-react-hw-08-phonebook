{"version":3,"file":"static/js/236.478b2e5d.chunk.js","mappings":"sLAEaA,E,QAAYC,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6F,yKCYtBC,EAAe,WAC1B,IAAMC,GAAqBC,EAAAA,EAAAA,MACrBC,GAAkBD,EAAAA,EAAAA,MAClBE,GAAqBF,EAAAA,EAAAA,MAErBG,GAAWC,EAAAA,EAAAA,MACjBC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAgCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAArCE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAEtBG,EAAe,SAAHC,GAAqC,IAADC,EAAAD,EAA9BE,OAAUb,EAAIY,EAAJZ,KAAMc,EAAKF,EAALE,MACtC,OAAQd,GACN,IAAK,OACH,OAAOC,EAAQa,GACjB,IAAK,QACH,OAAOT,EAASS,GAClB,IAAK,WACH,OAAOL,EAAYK,GACrB,QACE,OAEN,EAiBA,OACEC,EAAAA,EAAAA,KAAC9B,EAAAA,EAAS,CAAA+B,UACRC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAACC,aAAa,MAAMC,SAjBX,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEf9B,GAAS+B,EAAAA,EAAAA,IAAa,CAAEzB,KAAAA,EAAMI,MAAAA,EAAOI,SAAAA,KACrCkB,QAAQC,IAAI,CAAE3B,KAAAA,EAAMI,MAAAA,EAAOI,SAAAA,IAEtBJ,GAAUJ,GAASQ,GACtBoB,IAAAA,OAAAA,MAAsB,oCAExBA,IAAAA,OAAAA,KAAqB,gDAErBL,EAAKM,OACP,EAIuDb,SAAA,EACjDC,EAAAA,EAAAA,MAACa,EAAAA,GAAY,CAAAd,SAAA,EACXD,EAAAA,EAAAA,KAACgB,EAAAA,GAAS,CAACC,QAAS1C,EAAmB0B,SAAC,cACxCD,EAAAA,EAAAA,KAACkB,EAAAA,GAAS,CACRC,KAAK,OACLlC,KAAK,OACLmC,GAAI7C,EACJ8C,SAAU1B,EACV2B,UAAQ,QAGZpB,EAAAA,EAAAA,MAACa,EAAAA,GAAY,CAAAd,SAAA,EACXD,EAAAA,EAAAA,KAACgB,EAAAA,GAAS,CAACC,QAASxC,EAAgBwB,SAAC,WACrCD,EAAAA,EAAAA,KAACkB,EAAAA,GAAS,CACRC,KAAK,QACLlC,KAAK,QACLmC,GAAI3C,EACJ4C,SAAU1B,EACV2B,UAAQ,QAGZpB,EAAAA,EAAAA,MAACa,EAAAA,GAAY,CAAAd,SAAA,EACXD,EAAAA,EAAAA,KAACgB,EAAAA,GAAS,CAACC,QAASvC,EAAmBuB,SAAC,cACxCD,EAAAA,EAAAA,KAACkB,EAAAA,GAAS,CACRC,KAAK,WACLlC,KAAK,WACLmC,GAAI1C,EACJ2C,SAAU1B,EACV2B,UAAQ,QAGZtB,EAAAA,EAAAA,KAACuB,EAAAA,GAAO,CAACJ,KAAK,SAAQlB,SAAC,gBAI/B,ECvFe,SAASuB,IACtB,OACExB,EAAAA,EAAAA,KAAAyB,EAAAA,SAAA,CAAAxB,UACED,EAAAA,EAAAA,KAAC1B,EAAY,KAGnB,C","sources":["components/App/App.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 800px;\n  padding: 30px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Notiflix from 'notiflix';\nimport { registerUser } from '../../redux/auth/operations';\nimport { Container } from 'components/App/App.styled';\nimport {\n  FormBox,\n  FormBtn,\n  FormInput,\n  FormInputBox,\n  FormLabel,\n} from 'components/AuthNav/AuthNav.styled';\n\nexport const RegisterForm = () => {\n  const registerUsernameId = nanoid();\n  const registerEmailId = nanoid();\n  const registerPasswordId = nanoid();\n\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    dispatch(registerUser({ name, email, password }));\n    console.log({ name, email, password });\n\n    if (!email || !name || !password) {\n      Notiflix.Notify.error('Something went wrong! Try again!');\n    }\n    Notiflix.Notify.info('Thank you! You have successfully registered!');\n\n    form.reset();\n  };\n\n  return (\n    <Container>\n      <FormBox autoComplete=\"off\" onSubmit={handleSubmit}>\n        <FormInputBox>\n          <FormLabel htmlFor={registerUsernameId}>Username</FormLabel>\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            id={registerUsernameId}\n            onChange={handleChange}\n            required\n          />\n        </FormInputBox>\n        <FormInputBox>\n          <FormLabel htmlFor={registerEmailId}>Email</FormLabel>\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            id={registerEmailId}\n            onChange={handleChange}\n            required\n          />\n        </FormInputBox>\n        <FormInputBox>\n          <FormLabel htmlFor={registerPasswordId}>Password</FormLabel>\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            id={registerPasswordId}\n            onChange={handleChange}\n            required\n          />\n        </FormInputBox>\n        <FormBtn type=\"submit\">Sign up</FormBtn>\n      </FormBox>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <RegisterForm />\n    </>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","RegisterForm","registerUsernameId","nanoid","registerEmailId","registerPasswordId","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleChange","_ref","_ref$target","target","value","_jsx","children","_jsxs","FormBox","autoComplete","onSubmit","e","preventDefault","form","currentTarget","registerUser","console","log","Notiflix","reset","FormInputBox","FormLabel","htmlFor","FormInput","type","id","onChange","required","FormBtn","Register","_Fragment"],"sourceRoot":""}